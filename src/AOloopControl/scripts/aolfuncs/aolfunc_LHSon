#!/bin/bash

#########################################################################################
##          LINEAR HARDWARE SIMULATOR  ON                                              ##
#########################################################################################

execname="./AOloopControl"
statusfile="./status/stat_lsimON.txt"


# CHECK IF ALREADY RUNNING
mkdir -p status
if [ -a $statusfile ]; then
	lsimONstat=$( cat $statusfile )
else
	lsimONstat="OFF"
	echo "$lsimONstat" > $statusfile
fi



if [ "$lsimONstat" = " ON" ]; then
echo "LHS already running"
fi



##############################################
# FUNCTION: READ PARAMETER FROM FILE
##############################################
# arg 1: parameter name
# arg 2: default value
# 
# param value is stored in variable "paramvalue"
function ConfReadParam {
file="./conf/param_$1.txt"
if [ -f "$file" ]; then
paramvalue=$( cat $file )
else
paramvalue="$2"
echo "$2" > $file
fi
}






##########################################
# READ REQUIRED PARAMETERS
##########################################

# READ LOOP NUMBER
if [ -f LOOPNUMBER ]; then
LOOPNUMBER=$( cat LOOPNUMBER )
else
LOOPNUMBER="7"
echo "$LOOPNUMBER" > LOOPNUMBER
fi

ConfReadParam linsimDelay "3000"; linsimDelay="$paramvalue" # READ LHS hardware latency [us]
ConfReadParam linsimdt "2000"; linsimdt="$paramvalue" # READ LHS loop interval [us]
ConfReadParam GPUlinsim "7"; GPUlinsim="$paramvalue" # READ GPU index for LHS 
ConfReadParam DMindex "00"; DMindex="$paramvalue" # DM index 





tmuxname="aol${LOOPNUMBER}linsim"
tmuxnameD="aol${LOOPNUMBER}linsimD"

#logRunningProcess "aollinsimDelay" "$tmuxnameD" "Add delay to simulation"
#logRunningProcess "aollindm2wfsim" "$tmuxname" "linear computation of simulated WFS from DM"

sleep 0.2
tmux new-session -d -s ${tmuxnameD}
sleep 0.2
tmux new-session -d -s ${tmuxname}
sleep 0.2

#aoconflog "Start linear WFS simulator"

tmux send-keys -t $tmuxnameD "./auxscripts/aollinsimDelay ${linsimDelay}" C-m
tmux send-keys -t $tmuxname "./auxscripts/aollindm2wfsim -w ${linsimdt} ${GPUlinsim}" C-m

# Save current (hardware) WFS camera name & write new simulated WFS camera name
cp ./conf/streamlink_wfsim.name.txt ./conf/streamlink_wfsim_hardware.name.txt
echo "aol${LOOPNUMBER}_linsimWFS" > ./conf/streamlink_wfsim.name.txt



# turn off DM voltage 
$execname << EOF
aoldmvoltOFF ${DMindex}
exitCLI
EOF

# set dark to zero
$execname << EOF
readshmim aol${LOOPNUMBER_wfsdark
imzero aol${LOOPNUMBER_wfsdark
exitCLI
EOF

# remove flat
dmdispzero ${DMindex} 00

# connect to camera
./aolfuncs/aolfunc_StreamLink wfsim

echo " ON" > $statusfile




