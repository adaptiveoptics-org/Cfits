#!/bin/bash


if [ ! -v aolconfFLAG ]; then
echo "ERROR: This script should be called from aolconf main script"
exit
fi












# =====================================================
# ======== PREDICTIVE CONTROL  ========================
# =====================================================

if [ $state = "menupredictivecontrol" ]; then
stateok=1

menuname="PREDICTIVE CONTROL"


stringcenter "HELP"
menuitems=( "H" "\Zb\Zr\Z4$string\Zn" )
menuitems+=( " " " ")


# hardware latency (frames)
loophlat="2.1"
file="./conf/conf_hardlatency_frame.txt"
if [ -f "$file" ]; then
loophlat=$( cat $file )
fi

# software latency (frame)
loopslat="0.6"
file="./conf/conf_wfsmextrlatency_frame.txt"
if [ -f "$file" ]; then
loopslat=$( cat $file )
fi
lat=$(awk "BEGIN {printf \"%.3f\",${loophlat}+${loopslat}}")



stringcenter "TIMING PARAMETERS"
menuitems+=( "0 ->" "\Zb\Zr$string\Zn" )
menuitems+=( " " " ")

menuitems+=( "mt" "Measure Timing (-> timingstats/timingReport.txt)    $loophlat + $loopslat = $lat")

file="./conf/conf_PForder.txt"
if [ -f $file ]; then
PForder=$(cat $file)
else
echo "0" > $file
PForder=$(cat $file)
fi
menuitems+=( "PFord" "[$PForder] Select Predictive Filter order" )

file="./conf/conf_predcontr_blockSel.txt"
if [ -f $file ]; then
blockSel=$(cat $file)
else
echo "0" > $file
blockSel=$(cat $file)
fi
menuitems+=( "selB" "[$blockSel] Select block" )

menuitems+=( " " " ")




stringcenter "SINGLE FILE: COMPUTE FILTER(S)"
menuitems+=( "1 ->" "\Zb\Zr$string\Zn" )

menuitems+=( " " " ")


menuitems+=( "sellat" "Select Latest telemetry files for filter computation" )
fname=$(ls -lh ./PredictiveControl/modeval_ol.fits )
fnamel=$( echo $fname |  awk '{print $NF}' )
menuitems+=( "" "      FILE : $fnamel" )
menuitems+=( "mkPSDs" "Create open and closed loop PSDs of selected OL / CL telemetry" )
menuitems+=( "ARPFb" "AO find optimal AR linear predictive filter - single block" )
menuitems+=( "ARPF" "AO find optimal AR linear predictive filter" )



menuitems+=( " " " ")
menuitems+=( " " " ")
stringcenter "SINGLE FILE: APPLY FILTER(S)"
menuitems+=( "2 ->" "\Zb\Zr$string\Zn" )
menuitems+=( " " " ")

menuitems+=( " " " ")
menuitems+=( "sellatC" "Select Latest telemetry files for filter correction" )
fname=$(ls -lh ./PredictiveControl/modeval_ol_C.fits )
fnamel=$( echo $fname |  awk '{print $NF}' )
menuitems+=( "" "      FILE : $fnamel" )
menuitems+=( "PFapplyb" "Apply Predictive Filter - single block" )
menuitems+=( "PFapply" "Apply Predictive Filter" )


menuitems+=( " " " ")
menuitems+=( " " " ")
stringcenter "CONTINUOUS PREDICTIVE FILTER LOOP"
menuitems+=( "3 ->" "\Zb\Zr$string\Zn" )
menuitems+=( " " " ")



file="./conf/conf_PFblock_0.txt"
if [ -f $file ]; then
PFb0start=$( cat $file | awk '{ print $1}' )
PFb0end=$( cat $file | awk '{ print $2}' )
PFb0order=$( cat $file | awk '{ print $3}' )
PFb0lag=$( cat $file | awk '{ print $4}' )
PFb0dgain=$( cat $file | awk '{ print $5}' )
else
PFb0start="0"
PFb0end="2"
PFb0order="10"
PFb0lag="2.5"
PFb0dgain="0.1"
echo "$PFb0start $PFb0end $PFb0order $PFb0lag $PFb0dgain" > $file
fi

menuitems+=( "PFb0start" "[$PFb0start] set Predictive filter block 0 start" )
menuitems+=( "PFb0end" "[$PFb0end] set Predictive filter block 0 end" )
menuitems+=( "PFb0order" "[$PFb0order] set Predictive filter block 0 order" )
menuitems+=( "PFb0lag" "[$PFb0lag] set Predictive filter block 0 lag" )
menuitems+=( "PFb1dgain" "[$PFb0dgain] set Predictive filter block 0 derivationgain" )



menuitems+=( " " " ")
file="./conf/conf_PFblock_1.txt"
if [ -f $file ]; then
PFb1start=$( cat $file | awk '{ print $1}' )
PFb1end=$( cat $file | awk '{ print $2}' )
PFb1order=$( cat $file | awk '{ print $3}' )
PFb1lag=$( cat $file | awk '{ print $4}' )
PFb1dgain=$( cat $file | awk '{ print $5}' )
else
PFb1start="2"
PFb1end="12"
PFb1order="10"
PFb1lag="2.5"
PFb1dgain="0.1"
echo "$PFb1start $PFb1end $PFb1order $PFb1lag $PFb1dgain" > $file
fi

menuitems+=( "PFb1start" "[$PFb1start] set Predictive filter block 1 start" )
menuitems+=( "PFb1end" "[$PFb1end] set Predictive filter block 1 end" )
menuitems+=( "PFb1order" "[$PFb1order] set Predictive filter block 1 order" )
menuitems+=( "PFb1lag" "[$PFb1lag] set Predictive filter block 1 lag" )
menuitems+=( "PFb1dgain" "[$PFb1dgain] set Predictive filter block 1 derivationgain" )




menuitems+=( " " " ")
file="./status/stat_PFb0wON.txt"
PFb0wON=$( cat $file )
if [[ -f "$file" && ( "$PFb0wON" = " ON" || "$PFb0wON" = "OFF" ) ]]; then
echo "OK"
else
echo "OFF" > $file
PFb0wON="OFF"
fi

if [ "$PFb0wON" = "OFF" ]; then
menuitems+=( "PFb0wON" "[$PFb0wON] switch on Watch input for PF block 0" )
else
menuitems+=( "PFb0wOFF" "[\Z1\Zr${PFb0wON}\Zn] switch off Watch input for PF block 0" )
fi


file="./status/stat_PFb1wON.txt"
PFb1wON=$( cat $file )
if [[ -f "$file" && ( "$PFb1wON" = " ON" || "$PFb1wON" = "OFF" ) ]]; then
echo "OK"
else
echo "OFF" > $file
PFb1wON="OFF"
fi

if [ "$PFb1wON" = "OFF" ]; then
menuitems+=( "PFb1wON" "[$PFb1wON] switch on Watch input for PF block 1" )
else
menuitems+=( "PFb1wOFF" "[\Z1\Zr${PFb1wON}\Zn] switch off Watch input for PF block 1" )
fi




menuitems+=( " " " ")


file="./status/stat_PFb0cON.txt"
PFb0cON=$( cat $file )
if [[ -f "$file" && ( "$PFb0cON" = " ON" || "$PFb0cON" = "OFF" ) ]]; then
echo "OK"
else
echo "OFF" > $file
PFb0cON="OFF"
fi

if [ "$PFb0cON" = "OFF" ]; then
menuitems+=( "PFb0cON" "[$PFb0cON] switch on Watch input for PF block 0" )
else
menuitems+=( "PFb0cOFF" "[\Z1\Zr${PFb0cON}\Zn] switch off Watch input for PF block 0" )
fi

file="./status/stat_PFb1cON.txt"
PFb1cON=$( cat $file )
if [[ -f "$file" && ( "$PFb1cON" = " ON" || "$PFb1cON" = "OFF" ) ]]; then
echo "OK"
else
echo "OFF" > $file
PFb1cON="OFF"
fi

if [ "$PFb1cON" = "OFF" ]; then
menuitems+=( "PFb1cON" "[$PFb1cON] switch on Watch input for PF block 1" )
else
menuitems+=( "PFb1cOFF" "[\Z1\Zr${PFb1cON}\Zn] switch off Watch input for PF block 1" )
fi







dialog --colors --title "PREDICTIVE CONTROL - LOOP ${LOOPNUMBER}" --ok-label " Select " --cancel-label "Top" --help-button --help-label "Exit" --default-item "${menupred_default}" --menu "$menuname"  $nbwlines $nbwcols $nbwlines "${menuitems[@]}"  2> $tempfile



retval=$?
choiceval=$(cat $tempfile)
menupred_default="$choiceval"
state="menupredictivecontrol"
case $retval in
   0) # Monitor
	case $choiceval in

  
  mt)
mkdir -p timingstats
./auxscripts/aolMeasureTiming > timingstats/timingReport.txt
;;
  
  
	sellat)
./auxscripts/selectLatestTelemetry
;;
  
	mkPSDs)
./auxscripts/processTelemetryPSDs
;;
  
	selB)
exec 3>&1;
blockSel=$(dialog --inputbox "Select block" 0 0 "$blockSel" 2>&1 1>&3);
exec 3>&-;
echo "$blockSel" > ./conf/conf_predcontr_blockSel.txt
;;

	PFord)
exec 3>&1;
PForder=$(dialog --inputbox "Select predictive filter order" 0 0 "$PForder" 2>&1 1>&3);
exec 3>&-;
echo "$PForder" > ./conf/conf_PForder.txt
;;




    ARPFb)
echo "./auxscripts/aolARPFblock \"./PredictiveControl/modeval_ol.fits\"  $blockSel $lat $PForder" > cmd.txt
./auxscripts/aolARPFblock "./PredictiveControl/modeval_ol.fits"  $blockSel $lat $PForder
;;

    ARPF)
echo "./auxscripts/aolARPF \"./PredictiveControl/modeval_ol.fits\" $lat $PForder" > cmd.txt
./auxscripts/aolARPF "./PredictiveControl/modeval_ol.fits" $lat $PForder
;;







	sellatC)
./auxscripts/selectLatestTelemetry -c
;;
  
  
  
  	PFapplyb)
echo "./auxscripts/aolApplyARPFblock \"./PredictiveControl/modeval_ol_C.fits\" \"./PredictiveControl/outPF.$blockSel.fits\" $blockSel $lat" > cmd.txt
./auxscripts/aolApplyARPF "./PredictiveControl/modeval_ol_C.fits" "./PredictiveControl/outPF.$blockSel.fits" $blockSel $lat
;;

  
	PFapply)
echo "./auxscripts/aolApplyARPF \"./PredictiveControl/modeval_ol_C.fits\" \"./PredictiveControl/outPF.fits\" $lat" > cmd.txt
./auxscripts/aolApplyARPF "./PredictiveControl/modeval_ol_C.fits" "./PredictiveControl/outPF.fits" $lat
;;
















PFb0start)
exec 3>&1;
PFb0start=$(dialog --inputbox "Select Predictive filter block 0 start" 0 0 "$PFb0start" 2>&1 1>&3);
exec 3>&-;
file="./conf/conf_PFblock_0.txt"
echo "$PFb0start $PFb0end $PFb0order $PFb0lag $PFb0dgain" > $file
;;

PFb0end)
exec 3>&1;
PFb0end=$(dialog --inputbox "Select Predictive filter block 0 end" 0 0 "$PFb0end" 2>&1 1>&3);
exec 3>&-;
file="./conf/conf_PFblock_0.txt"
echo "$PFb0start $PFb0end $PFb0order $PFb0lag $PFb0dgain" > $file
;;

PFb0order)
exec 3>&1;
PFb0order=$(dialog --inputbox "Select Predictive filter block 0 order" 0 0 "$PFb0order" 2>&1 1>&3);
exec 3>&-;
file="./conf/conf_PFblock_0.txt"
echo "$PFb0start $PFb0end $PFb0order $PFb0lag $PFb0dgain" > $file
;;

PFb0lag)
exec 3>&1;
PFb0lag=$(dialog --inputbox "Select Predictive filter block 0 lag" 0 0 "$PFb0lag" 2>&1 1>&3);
exec 3>&-;
file="./conf/conf_PFblock_0.txt"
echo "$PFb0lag $PFb0end $PFb0order $PFb0lag $PFb0dgain" > $file
;;

PFb0dgain)
exec 3>&1;
PFb0dgain=$(dialog --inputbox "Select Predictive filter block 0 derivation gain" 0 0 "$PFb0dgain" 2>&1 1>&3);
exec 3>&-;
file="./conf/conf_PFblock_0.txt"
echo "$PFb0lag $PFb0end $PFb0order $PFb0lag $PFb0dgain" > $file
;;








PFb1start)
exec 3>&1;
PFb1start=$(dialog --inputbox "Select Predictive filter block 1 start" 0 0 "$PFb1start" 2>&1 1>&3);
exec 3>&-;
file="./conf/conf_PFblock_1.txt"
echo "$PFb1start $PFb1end $PFb1order $PFb1lag $PFb1dgain" > $file
;;

PFb1end)
exec 3>&1;
PFb1end=$(dialog --inputbox "Select Predictive filter block 1 end" 0 0 "$PFb1end" 2>&1 1>&3);
exec 3>&-;
file="./conf/conf_PFblock_1.txt"
echo "$PFb1start $PFb1end $PFb1order $PFb1lag $PFb1dgain" > $file
;;

PFb1order)
exec 3>&1;
PFb1order=$(dialog --inputbox "Select Predictive filter block 1 order" 0 0 "$PFb1order" 2>&1 1>&3);
exec 3>&-;
file="./conf/conf_PFblock_1.txt"
echo "$PFb1start $PFb1end $PFb1order $PFb1lag $PFb1dgain" > $file
;;

PFb1lag)
exec 3>&1;
PFb1lag=$(dialog --inputbox "Select Predictive filter block 1 lag" 0 0 "$PFb1lag" 2>&1 1>&3);
exec 3>&-;
file="./conf/conf_PFblock_1.txt"
echo "$PFb1lag $PFb1end $PFb1order $PFb1lag $PFb1dgain" > $file
;;

PFb1dgain)
exec 3>&1;
PFb1dgain=$(dialog --inputbox "Select Predictive filter block 1 derivation gain" 0 0 "$PFb1dgain" 2>&1 1>&3);
exec 3>&-;
file="./conf/conf_PFblock_1.txt"
echo "$PFb1lag $PFb1end $PFb1order $PFb1lag $PFb1dgain" > $file
;;









	PFb0wON)
tmuxname="aol${LOOPNUMBER}PFb0watchin"
tmux new-session -d -s ${tmuxname}
tmux send-keys -t ${tmuxname} " " C-m
tmux send-keys -t ${tmuxname} " " C-m
tmux send-keys -t ${tmuxname} "Cfits" C-m
tmux send-keys -t ${tmuxname} "aolPFwatchin ${LOOPNUMBER} 0" C-m
tmux send-keys -t ${tmuxname} "exit" C-m
PFb0wON=" ON"
file="./status/stat_PFb0wON.txt"
echo "writing $PFb0wON to file $file"
echo "$PFb0wON" > $file
menupred_default="PFb0wOFF"
;;

	PFb0wOFF)
tmuxname="aol${LOOPNUMBER}PFb0watchin"
tmux send-keys -t ${tmuxname} C-c
PFb0wON="OFF"
file="./status/stat_PFb0wON.txt"
echo "$PFb0wON" > $file
menupred_default="PFb0wON"
;;





	PFb1wON)
tmuxname="aol${LOOPNUMBER}PFb1watchin"
tmux new-session -d -s ${tmuxname}
tmux send-keys -t ${tmuxname} " " C-m
tmux send-keys -t ${tmuxname} " " C-m
tmux send-keys -t ${tmuxname} "Cfits" C-m
tmux send-keys -t ${tmuxname} "aolPFwatchin ${LOOPNUMBER} 1" C-m
tmux send-keys -t ${tmuxname} "exit" C-m
PFb0wON=" ON"
file="./status/stat_PFb1wON.txt"
echo "writing $PFb1wON to file $file"
echo "$PFb1wON" > $file
menupred_default="PFb1wOFF"
;;

	PFb1wOFF)
tmuxname="aol${LOOPNUMBER}PFb1watchin"
tmux send-keys -t ${tmuxname} C-c
PFb1wON="OFF"
file="./status/stat_PFb1wON.txt"
echo "$PFb1wON" > $file
menupred_default="PFb1wON"
;;






	PFb0cON)
tmuxname="aol${LOOPNUMBER}PFb0comp"
tmux new-session -d -s ${tmuxname}
tmux send-keys -t ${tmuxname} " " C-m
tmux send-keys -t ${tmuxname} " " C-m
tmux send-keys -t ${tmuxname} "Cfits" C-m
tmux send-keys -t ${tmuxname} "readshmim aol${LOOPNUMBER}_modevalol_PFb0" C-m
tmux send-keys -t ${tmuxname} "mkARpfilt aol${LOOPNUMBER}_modevalol_PFb0 ${PFb0order} ${PFb0lag} 0.0001 0.0 aol${LOOPNUMBER}_outPFb0 1 ${PFb0dgain}" C-m
#tmux send-keys -t ${tmuxname} "exit" C-m
PFb0cON=" ON"
file="./status/stat_PFb0cON.txt"
echo "writing $PFb0cON to file $file"
echo "$PFb0cON" > $file
menupred_default="PFb0cOFF"
;;

	PFb0cOFF)
tmuxname="aol${LOOPNUMBER}PFb0comp"
tmux send-keys -t ${tmuxname} C-c
PFb0cON="OFF"
file="./status/stat_PFb0cON.txt"
echo "$PFb0cON" > $file
menupred_default="PFb0cON"
;;




	PFb1cON)
tmuxname="aol${LOOPNUMBER}PFb1comp"
tmux new-session -d -s ${tmuxname}
tmux send-keys -t ${tmuxname} " " C-m
tmux send-keys -t ${tmuxname} " " C-m
tmux send-keys -t ${tmuxname} "Cfits" C-m
tmux send-keys -t ${tmuxname} "readshmim aol${LOOPNUMBER}_modevalol_PFb1" C-m
tmux send-keys -t ${tmuxname} "mkARpfilt aol${LOOPNUMBER}_modevalol_PFb1 ${PFb1order} ${PFb1lag} 0.0001 0.0 aol${LOOPNUMBER}_outPFb1 1 ${PFb1dgain}" C-m
#tmux send-keys -t ${tmuxname} "exit" C-m
PFb1cON=" ON"
file="./status/stat_PFb1cON.txt"
echo "writing $PFb1cON to file $file"
echo "$PFb1cON" > $file
menupred_default="PFb1cOFF"
;;

	PFb0cOFF)
tmuxname="aol${LOOPNUMBER}PFb1comp"
tmux send-keys -t ${tmuxname} C-c
PFb1cON="OFF"
file="./status/stat_PFb1cON.txt"
echo "$PFb1cON" > $file
menupred_default="PFb1cON"
;;












esac
;; 
   1) state="menutop";;   
  2) state="menuexit";;
   255) state="menuexit";;
esac

fi






