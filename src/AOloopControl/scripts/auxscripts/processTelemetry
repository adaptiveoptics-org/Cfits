#!/bin/bash


# number of arguments to script
NBARGS=0


# ======================= PROCESS NAME =================================
pname=`echo "$0" | sed "s/\.\///g"`







function printHELP {
echo "------------------------------------------------------------------------"
echo "$(tput bold) $pname : PROCESS LATEST TELEMETRY FOR PREDICTIVE CONTROL  $(tput sgr 0)"
echo "------------------------------------------------------------------------"
echo "  Loop: process latest telemetry stream for predictive control"
echo "   "
echo " $(tput bold)USAGE:$(tput sgr 0)"
echo "     $0 [-h]"
echo ""
echo " $(tput bold)OPTIONS:$(tput sgr 0)"
echo "     $(tput bold)-h$(tput sgr 0)          help"
echo ""
echo " $(tput bold)INPUT:$(tput sgr 0)"
echo ""
echo " $(tput bold)OUTPUT:$(tput sgr 0)"
echo ""
echo "------------------------------------------------------------------------"
}




# ================= OPTIONS =============================

while getopts :h FLAG; do
  case $FLAG in
    h)  #show help
      printHELP
      exit
      ;;
    \?) #unrecognized option - show help
      echo -e \\n"Option -${BOLD}$OPTARG${NORM} not allowed."
      printHELP
      ;;
  esac
done

shift $((OPTIND-1))  





if [ "$1" = "help" ] || [ "$#" -ne $NBARGS ]; then
if [ "$#" -ne $NBARGS ]; then
    echo "$(tput setaf 1)$(tput bold) Illegal number of parameters ($NBARGS params required, $# entered) $(tput sgr 0)"
fi
printHELP
        exit
fi









# select most recent files

datestr=`date -u +%Y%m%d`
logdir="/media/data"

OLdir="$logdir/$datestr/aol2_modeval_ol"
CLdir="$logdir/$datestr/aol2_modeval"

OLfn=$( ls -t $OLdir/*.fits | head -n1 )
CLfn=$( ls -t $CLdir/*.fits | head -n1 )
echo "OL file : $OLfn"
echo "CL file : $CLfn"

cp $OLfn modeval_ol.fits
cp $CLfn modeval_cl.fits




Cfits << EOF
loadfits "modeval_ol.fits" im
im3Dto2D im
imswapaxis2D im im1
do1Drfft im1 imcc
c2ap imcc ima imp
imi=ima*ima
savefits imi "!psd_ol.fits"
im2ascii imi psd_ol.txt
listim
exit
EOF



Cfits << EOF
loadfits "modeval_cl.fits" im
im3Dto2D im
imswapaxis2D im im1
do1Drfft im1 imcc
c2ap imcc ima imp
imi=ima*ima
savefits imi "!psd_cl.fits"
im2ascii imi psd_cl.txt
listim
exit
EOF

