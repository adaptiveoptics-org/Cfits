#! /bin/bash


# number of arguments to script
NBARGS=1

# ======================= PROCESS NAME =================================
pname="aol${loopnb}modeval0"

loopnb=$(cat LOOPNUMBER)


function printHELP {
echo "------------------------------------------------------------------------"
echo "$(tput bold) $pname : EXTRACT MODE VALUES FROM WFS IMAGES $(tput sgr0)"
echo "------------------------------------------------------------------------"
echo "  computes mode coefficients from WFS image stream"
echo "   "
echo " $(tput bold)USAGE:$(tput sgr0)"
echo "     $0 [-h] <GPUdevice>"
echo ""
echo " $(tput bold)OPTIONS:$(tput sgr0)"
echo "     $(tput bold)-h$(tput sgr0)          help"
echo ""
echo " $(tput bold)INPUT:$(tput sgr0)"
echo "     <GPUdevice>     GPU device"
echo ""
echo " $(tput bold)OUTPUT:$(tput sgr0)"
echo "     aol${loopnb}_modeval      Mode coefficient values"
echo ""
echo "------------------------------------------------------------------------"
}








# ================= OPTIONS =============================

while getopts :h FLAG; do
  case $FLAG in
    h)  #show help
      printHELP
      exit
      ;;
    \?) #unrecognized option - show help
      echo -e \\n"Option -${BOLD}$OPTARG${NORM} not allowed."
      printHELP
      ;;
  esac
done

shift $((OPTIND-1)) 








if [ "$1" = "help" ] || [ "$#" -ne $NBARGS ]; then
if [ "$#" -ne $NBARGS ]; then
    echo "$(tput setaf 1)$(tput bold) Illegal number of parameters ($NBARGS params required, $# entered) $(tput sgr0)"
fi
printHELP
        exit
fi




# this version does not use masking (yet)

Cfits -n $pname << EOF
csetpmove aol${loopnb}RT1
readshmim aol${loopnb}_respM
readshmim aol${loopnb}_imWFS0
readshmim aol${loopnb}_imWFS0tot
readshmim aol${loopnb}_wfsref0

readshmim aol${loopnb}_wfsmask
cudaextrmodes aol${loopnb}_imWFS0 aol${loopnb}_imWFS0tot aol${loopnb}_respM aol${loopnb}_wfsref0 nullim aol${loopnb}_modeval $1 1 1 1 2 0


exit
EOF

