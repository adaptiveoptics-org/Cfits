#!/bin/bash


if [ ! -v FPaolconfFLAG ]; then
echo "ERROR: This script should be called from FPaolconf main script"
exit
fi


function printWARNING ()
{
tput bold
tput setaf 5
echo "WARNING: $@"
tput sgr0
aoconflog "WARNING: $@"
}

function printERROR ()
{
tput bold
tput setaf 1
echo "ERROR: $@"
tput sgr0
aoconflog "ERROR: $@"
}


function logRunningProcess 
{
	datestr=`date -u +%Y-%m-%d_%H:%M:%S`
	string=$( printf "%s   %20s   %20s   %s" "${datestr}" "$1" "$2" "$3" )
	echo "$string" > $1.runproc 
}





function stringcenter {
line=$1
    let " col1 = $nbwcols-35"
    columns="$col1"
    string=$(printf "%*s%*s\n" $(( (${#line} + columns) / 2)) "$line" $(( (columns - ${#line}) / 2)) " ")
}



function getshmimsize {
$execname << EOF
readshmimsize $1 _size.txt
quit
EOF
sizestring=$( cat _size.txt )
sizestring=$(printf "%+12s\n" "$sizestring" )
echo "$sizestring" > conf/conf_imsize_$1.txt
rm -f _size.txt
}



function makemenuitemstringFPaolshm {
name="$1"
textfield=$( printf " %-20s" "$2" )
tf1=$( printf " %+17s" "FPaol${LOOPNUMBER}_${name}")
fname=$( cat ./conf/conf_${name}_name.txt )
if [ -f "$fname" ] && [ -f "./conf/conf_${name}_name.txt" ]; then
#getshmimsize "FPaol${LOOPNUMBER}_${name}"
sizestring=$( cat conf/conf_imsize_FPaol${LOOPNUMBER}_${name}.txt )
OKstr="\Z2\Zr$sizestring\Zn"
menustring="[${OKstr}] $textfield          \Z4\Zb$tf1\Zn <- \Zu${fname}\Zn"
else
OKstr="\Z1   MISSING  \Zn"
menustring="[${OKstr}] $textfield          \Z4\Zb$tf1\Zn <- \Zu\Z1${fname}\Zn"
fi
}



function Fits2shm {
aoconflog "Move FITS to shared memory : $1 -> $2"
if [ "$CPUconfRT" -eq "1" ];then
$execname << EOF # move file to shared memory
csetpmove system
loadfits "$1" im
imcp2shm im $2
quit
EOF
else
$execname << EOF # move file to shared memory
loadfits "$1" im
imcp2shm im $2
quit
EOF
fi
}



function SelectValue01 {
vali=$( echo $value| awk '{printf("%03d",1000.0*$1)}' )
menuitems1=( "000" "0.000" )
i="1"
while [ $i -lt "$1" ]
do
str0=$( echo $i|awk '{printf("%03d",$1)}')
str1=$( echo $i|awk '{printf("%5.3f", $1*0.001)}')
i=$[$i+$i]
menuitems1+=( "$str0" "$str1" )
done

for i in `seq $1 $3 $2 `;
        do
if [[ "$i" -lt "$2" && "$i" -gt "001" ]]; then
str0=$( echo $i|awk '{printf("%03d",$1)}')
str1=$( echo $i|awk '{printf("%5.3f", $1*0.001)}')
menuitems1+=( "$str0" "$str1" )
fi
done 

cmd=( dialog --default-item "${vali}" --menu "Choose one:" 50 80 100 "${menuitems1[@]}" )
value1=$("${cmd[@]}" 2>&1 >/dev/tty)
value=$( echo $value1 | awk '{printf("%5.3f", $1*0.001)}' )
echo $value
}



function SelectValue02 {
vali=$( echo $value| awk '{printf("%05d",100000.0*$1)}' )
menuitems1=( "00000" "0.00000" )
i="1"
while [ $i -lt "$1" ]
do
str0=$( echo $i|awk '{printf("%05d",$1)}')
str1=$( echo $i|awk '{printf("%7.5f", $1*0.00001)}')
i=$[$i+$i]
menuitems1+=( "$str0" "$str1" )
done

for i in `seq $1 $3 $2 `;
        do
if [[ "$i" -lt "$2" && "$i" -gt "00001" ]]; then
str0=$( echo $i|awk '{printf("%05d",$1)}')
str1=$( echo $i|awk '{printf("%7.5f", $1*0.00001)}')
menuitems1+=( "$str0" "$str1" )
fi
done 

cmd=( dialog --default-item "${vali}" --menu "Choose one:" 50 80 100 "${menuitems1[@]}" )
value1=$("${cmd[@]}" 2>&1 >/dev/tty)
value=$( echo $value1 | awk '{printf("%7.5f", $1*0.00001)}' )
echo $value
}



function SelectValue03 {
vali=$( echo $value| awk '{printf("%03d",1000.0*$1)}' )
menuitems1=( "000" "1.000" )
i="1"
while [ $i -lt "$1" ]
do
str0=$( echo $i|awk '{printf("%03d",$1)}')
str1=$( echo $i|awk '{printf("%5.3f", 1.0-$1*0.001)}')
i=$[$i+$i]
menuitems1+=( "$str0" "$str1" )
done

for i in `seq $1 $3 $2 `;
        do
if [[ "$i" -lt "$2" && "$i" -gt "001" ]]; then
str0=$( echo $i|awk '{printf("%03d",$1)}')
str1=$( echo $i|awk '{printf("%5.3f", 1.0-$1*0.001)}')
menuitems1+=( "$str0" "$str1" )
fi
done 

cmd=( dialog --default-item "${vali}" --menu "Choose one:" 50 80 100 "${menuitems1[@]}" )
value1=$("${cmd[@]}" 2>&1 >/dev/tty)
value=$( echo $value1 | awk '{printf("%5.3f", 1.0-$1*0.001)}' )
echo $value
}



