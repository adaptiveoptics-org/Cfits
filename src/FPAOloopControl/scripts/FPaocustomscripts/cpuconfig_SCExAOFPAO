#!/bin/bash

# number of arguments to script
NBARGS=0

LOOPNUMBER=$( cat LOOPNUMBER )


# ======================= PROCESS NAME =================================
pname=`echo "$0" | sed "s/\.\///g"`


function printHELP {
echo "------------------------------------------------------------------------"
echo "$(tput bold) $pname :CONFIGURE CPU FOR LOW-LATENCY FPAO LOOP $(tput sgr0)"
echo "------------------------------------------------------------------------"
echo " Configures LAN, CPU cores, CPU sets"
echo "   "
echo " $(tput bold)USAGE:$(tput sgr0)"
echo "     $0 [-ho]"
echo ""
echo " $(tput bold)OPTIONS:$(tput sgr0)"
echo "     $(tput bold)-h$(tput sgr0)          help"
echo "     $(tput bold)-o$(tput sgr0)          turn OFF low-latency configuration (default is ON)"
echo ""
echo "------------------------------------------------------------------------"
}


printHELP1 ()
{
    printf "%20s       configure CPU for low-latency FPAO loop operation\n" "$0" 
}





# Transform long options to short ones
singlelinehelp=0
for arg in "$@"; do
  shift
  case "$arg" in
    "--help") set -- "$@" "-h" ;;
    "--help1") 
set -- "$@" "-h" 
singlelinehelp=1;
;;
    *)        set -- "$@" "$arg"
  esac
done




ON=1 # default

while getopts :ho FLAG; do
  case $FLAG in
    h)  #show help
      if [ "$singlelinehelp" -eq "0" ]; then
      printHELP
      else
      printHELP1
      fi
      exit
      ;;
    o) 
    echo "TURNING LOW-LATENCY SETTINGS OFF"
	ON="0"
    ;;
    \?) #unrecognized option - show help
      echo -e \\n"Option -${BOLD}$OPTARG${NORM} not allowed."
      printHELP
      ;;
  esac
done

shift $((OPTIND-1))  






if [ "$1" = "help" ] || [ "$#" -ne $NBARGS ]; then
if [ "$#" -ne $NBARGS ]; then
    echo "$(tput setaf 1)$(tput bold) Illegal number of parameters ($NBARGS params required, $# entered) $(tput sgr0)"
fi
printHELP
        exit
fi









echo "CPU configuration done by main loop"


touch cpuconfigOK
